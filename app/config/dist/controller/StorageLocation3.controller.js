sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/MessageBox","sap/ui/model/Filter"],function(e,t,o,i){"use strict";var n;return e.extend("config.controller.StorageLocation",{onInit:function(){this.onStorageLocation()},onStorageLocation:function(){var e=new sap.ui.model.json.JSONModel;this.getView().setModel(e,"locationModel");let t=this.getOwnerComponent().getModel();let o=t.bindList("/StorageLocation");o.requestContexts(0,Infinity).then(function(t){var o=[];t.forEach(function(e){o.push(e.getObject())});e.setData({StorageLocations:o});console.log("location",o)})},onCreatePress:function(){if(!this.createDialog){this.createDialog=this.byId("createDialog")}this.createDialog.open()},onDialogCreatePress:function(){var e=this.byId("locationIDInput").getValue().trim();var o=this.byId("locationNameInput").getValue().trim();let i=this.byId("storageTable");if(!e||!o){t.show("Both Location ID and Location Name must be filled in.");return}let n=this.getView().getModel();let a=n.bindList("/StorageLocation");let s=new sap.ui.model.Filter("LocationID",sap.ui.model.FilterOperator.EQ,e);a.filter(s).requestContexts().then(function(s){if(s.length>0){t.show("Location ID already exists. Please use a different ID.");return}let l=new sap.ui.model.Filter("LocationName",sap.ui.model.FilterOperator.EQ,o);a.filter(l).requestContexts().then(function(s){if(s.length>0){t.show("Location Name already exists. Please use a different name.");return}var l={LocationID:e,LocationName:o};console.log("locationEntry",l);a.create(l,true);a.attachCreateCompleted(e=>{let t=e.getParameters();if(t.success){n.refresh();i.getBinding("items").refresh()}});t.show("Location Created: "+e+" - "+o);this.byId("locationIDInput").setValue("");this.byId("locationNameInput").setValue("");this.createDialog.close()}.bind(this))}.bind(this))},onDialogCancelPress:function(){this.createDialog.close()},onEditPress:function(){var e=this.byId("storageTable");var o=e.getSelectedItem();if(o){var i=o.getBindingContext("locationModel").getObject();this.byId("editLocationIDInput").setValue(i.LocationID);this.byId("editLocationNameInput").setValue(i.LocationName);if(!this.editDialog){this.editDialog=this.byId("editDialog")}this.editDialog.open()}else{t.show("Please select a row to edit.")}},onDialogSavePress:function(){var e=this.getView().byId("editLocationIDInput").getValue();var o=this.getView().byId("editLocationNameInput").getValue();let i=this.getView().getModel();let n=i.bindList("/StorageLocation");let a=new sap.ui.model.Filter("LocationID",sap.ui.model.FilterOperator.EQ,e);n.filter(a).requestContexts().then(function(e){if(e.length>0){e[0].setProperty("LocationName",o);i.refresh();t.show("Location updated successfully.")}else{t.show("Location not found.")}}.bind(this));this.editDialog.close()},onDialogCancelEditPress:function(){this.editDialog.close()},onRowSelect:function(e){var t=e.getParameter("listItem");if(t){var o=t.getBindingContext("locationModel");if(o){n=o.getProperty("LocationID");console.log("Selected Location ID: ",n)}}},onDeletePress:function(){var e=this.byId("storageTable");var i=e.getSelectedItem();if(e.getBinding("items").getLength()===0){t.show("No storage locations available.");return}if(i){var a=i.getBindingContext("locationModel");o.confirm("Are you sure you want to delete this storage location?",{title:"Confirm Deletion",onClose:function(e){if(e===o.Action.OK){let e=this.getView().getModel();let o=e.bindList("/StorageLocation");let i=new sap.ui.model.Filter("LocationID",sap.ui.model.FilterOperator.EQ,n);o.filter(i).requestContexts().then(function(e){if(e.length>0){e[0].delete();t.show("Storage location deleted successfully.");this.onStorageLocation()}else{t.show("Location not found.")}}.bind(this))}}.bind(this)})}else{t.show("Please select a row to delete.")}}})});
//# sourceMappingURL=StorageLocation3.controller.js.map